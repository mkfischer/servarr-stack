# Servarr Stack - Optimized for Private Network Only
# Using podman-compose with NFS mounts from 192.168.50.186
# Last updated: 2025
#
# Prerequisites for Ubuntu:
# 1. Mount NFS share: sudo mount -t nfs 192.168.50.186:/mnt/array1/yoho /mnt/media
# 2. Create config directories: sudo mkdir -p /srv/apps/{sonarr,radarr,bazarr,prowlarr,lazylibrarian,qbittorrent,qbitmanage,sabnzbd,slskd,jellyfin/{config,cache},jellyseerr,tdarr/{server,configs},unpackerr,beets}
# 3. Set permissions: sudo chown -R 1000:1000 /srv/apps
#
# Volume paths use /srv/apps for local config and /mnt/media for shared media storage

services:
  # Dashboard
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
    volumes:
      - /srv/apps/homepage:/app/config
      # - /var/run/docker.sock:/var/run/docker.sock:ro # Disabled for Podman
    ports:
      - "3000:3000"
    networks:
      media_net:
        ipv4_address: 172.20.0.2
    restart: unless-stopped

  # Media Automation Services
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
    volumes:
      - /srv/apps/sonarr:/config
      - /mnt/media/downloads:/downloads
      - /mnt/media/library/tv:/tv
      - /mnt/media/library/anime-series:/anime
    ports:
      - "8989:8989"
    networks:
      media_net:
        ipv4_address: 172.20.0.11
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
    volumes:
      - /srv/apps/radarr:/config
      - /mnt/media/downloads:/downloads
      - /mnt/media/library/movies:/movies
      - /mnt/media/library/anime-movies:/anime
    ports:
      - "7878:7878"
    networks:
      media_net:
        ipv4_address: 172.20.0.12
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
    volumes:
      - /srv/apps/bazarr:/config
      - /mnt/media/library/movies:/movies
      - /mnt/media/library/tv:/tv
      - /mnt/media/library/anime-series:/anime-series
      - /mnt/media/library/anime-movies:/anime-movies
    ports:
      - "6767:6767"
    networks:
      media_net:
        ipv4_address: 172.20.0.13
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
    volumes:
      - /srv/apps/prowlarr:/config
    ports:
      - "9696:9696"
    networks:
      media_net:
        ipv4_address: 172.20.0.14
    restart: unless-stopped

  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
      # - DOCKER_MODS=linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg  # May not work with Podman
    volumes:
      - /srv/apps/lazylibrarian:/config
      - /mnt/media/downloads/:/downloads
      - /mnt/media/library/books:/books
      - /mnt/media/library/books/:/audiobooks
    ports:
      - "5299:5299"
    networks:
      media_net:
        ipv4_address: 172.20.0.15
    restart: unless-stopped

  # Download Clients
  qbittorrent:
    image: docker.io/qbittorrentofficial/qbittorrent-nox:latest
    container_name: qbittorrent
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Denver
      WEBUI_PORT: 8080
      TORRENTING_PORT: 6881
    volumes:
      - /srv/apps/qbittorrent:/config
      - /mnt/media/downloads:/downloads
    ports:
      - "8085:8080" # Web UI
      - "6881:6881" # Torrent port
      - "6881:6881/udp" # Torrent port UDP
    networks:
      media_net:
        ipv4_address: 172.20.0.16
    restart: unless-stopped

  sabnzbd:
    image: ghcr.io/hotio/sabnzbd
    container_name: sabnzbd
    environment:
      WEBUI_PORTS: 8082
      PUID: 1000
      PGID: 1000
      UMASK: 002
      TZ: America/Denver
    volumes:
      - /srv/apps/sabnzbd:/config
      - /mnt/media/downloads:/data
    ports:
      - "8082:8082"
    networks:
      media_net:
        ipv4_address: 172.20.0.17
    restart: unless-stopped

  slskd:
    image: slskd/slskd
    container_name: slskd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
      - SLSKD_REMOTE_CONFIGURATION=true
    volumes:
      - /srv/apps/slskd:/app
      - /mnt/media/downloads/complete/music:/data/downloads
      - /mnt/media/downloads/incomplete:/data/incomplete_downloads
      - /mnt/media/library/music:/data/music
    ports:
      - "5030:5030" # HTTP port
      - "5031:5031" # HTTPS port
      - "2234:2234" # Soulseek port
    networks:
      media_net:
        ipv4_address: 172.20.0.18
    restart: unless-stopped

  # Media Servers
  # Note: FlareSolverr removed - only needed for public trackers with CloudFlare protection
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    volumes:
      - /srv/apps/jellyfin/config:/config
      - /srv/apps/jellyfin/cache:/cache
      - /mnt/media/library/movies:/media/movies:ro
      - /mnt/media/library/tv:/media/tv:ro
      - /mnt/media/library/anime-series:/anime-series:ro
      - /mnt/media/library/anime-movies:/anime-movies:ro
      - /mnt/media/fonts:/usr/local/share/fonts/custom:ro
    ports:
      - "8096:8096" # Web UI
      - "8920:8920" # HTTPS Web UI
      - "7359:7359/udp" # Client discovery
      # - "1900:1900/udp"       # DLNA - commented out for private network (uncomment if needed)
    environment:
      TZ: America/Denver
    networks:
      media_net:
        ipv4_address: 172.20.0.8
    restart: unless-stopped

  jellyseerr:
    image: ghcr.io/hotio/jellyseerr
    container_name: jellyseerr
    ports:
      - "5055:5055"
    environment:
      PUID: 1000
      PGID: 1000
      UMASK: 002
      TZ: America/Denver
    volumes:
      - /srv/apps/jellyseerr:/config
    networks:
      media_net:
        ipv4_address: 172.20.0.6
    restart: unless-stopped

  # Support Services
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr
    ports:
      - "8265:8265" # Web UI
      - "8266:8266" # Node API
    environment:
      TZ: America/Denver
      PUID: 1000
      PGID: 1000
      UMASK_SET: 002
      serverIP: 0.0.0.0
      serverPort: 8266
      webUIPort: 8265
      internalNode: "false"
      auth: "true"
      authSecretKey:
    volumes:
      - /srv/apps/tdarr/server:/app/server
      - /srv/apps/tdarr/configs:/app/configs
      - /srv/apps/tdarr:/config
      - /mnt/media/apps/tdarr/temp:/temp
      - /mnt/media/library:/media
    networks:
      media_net:
        ipv4_address: 172.20.0.3
    restart: unless-stopped

  unpackerr:
    image: ghcr.io/hotio/unpackerr
    container_name: unpackerr
    environment:
      PUID: 1000
      PGID: 1000
      UMASK: 002
      TZ: America/Denver
    volumes:
      - /srv/apps/unpackerr:/config
      - /mnt/media/downloads:/data
    networks:
      media_net:
        ipv4_address: 172.20.0.4
    restart: unless-stopped

  beets:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beets
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - /srv/apps/beets:/config
      - /mnt/media/library/music:/music
      - /mnt/media/downloads/complete/music:/downloads
    ports:
      - "8337:8337"
    networks:
      media_net:
        ipv4_address: 172.20.0.5
    restart: unless-stopped

  qbitmanage:
    image: ghcr.io/hotio/qbitmanage
    container_name: qbitmanage
    environment:
      PUID: 1000
      PGID: 1000
      UMASK: 002
      TZ: America/Denver
    volumes:
      - /srv/apps/qbitmanage:/config
      - /mnt/media/downloads:/downloads
    networks:
      media_net:
        ipv4_address: 172.20.0.7
    restart: unless-stopped
    depends_on:
      - qbittorrent

  # Note: Watchtower removed - manual container updates preferred for private network
  # To update containers manually, use: podman pull <image> && podman-compose up -d <service>

networks:
  media_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
